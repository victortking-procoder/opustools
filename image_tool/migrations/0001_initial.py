# Generated by Django 5.2.3 on 2025-08-02 00:26

import django.db.models.deletion
import image_tool.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=image_tool.models.image_uploaded_file_path)),
                ('original_filename', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Image Uploaded File (Image Tool)',
                'verbose_name_plural': 'Image Uploaded Files (Image Tool)',
                'db_table': 'image_tool_uploaded_files',
            },
        ),
        migrations.CreateModel(
            name='ImageConversionJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tool_type', models.CharField(choices=[('image_compressor', 'Image Compressor'), ('image_resizer', 'Image Resizer'), ('image_converter', 'Image Converter')], default='image_compressor', help_text='The type of image operation to perform.', max_length=50)),
                ('quality', models.IntegerField(blank=True, help_text='JPEG compression quality (0-100). Only applicable for JPEG output.', null=True)),
                ('width', models.IntegerField(blank=True, help_text='Desired width for resizing. If only width or height is provided, aspect ratio is maintained.', null=True)),
                ('height', models.IntegerField(blank=True, help_text='Desired height for resizing. If only width or height is provided, aspect ratio is maintained.', null=True)),
                ('target_format', models.CharField(blank=True, choices=[('JPEG', 'JPEG'), ('PNG', 'PNG'), ('WEBP', 'WebP'), ('GIF', 'GIF'), ('BMP', 'BMP'), ('TIFF', 'TIFF')], help_text='Desired output format (e.g., JPEG, PNG, WEBP). If not specified, original format will be maintained (if possible).', max_length=10, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', help_text='Current status of the image conversion job.', max_length=20)),
                ('output_url', models.URLField(blank=True, help_text='URL to the processed image file (relative to MEDIA_URL).', max_length=500, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Detailed message if the job failed.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image_conversion_jobs', to=settings.AUTH_USER_MODEL)),
                ('uploaded_file', models.ForeignKey(help_text='The original image file uploaded for this conversion job.', on_delete=django.db.models.deletion.CASCADE, related_name='image_conversion_jobs', to='image_tool.uploadedfile')),
            ],
            options={
                'verbose_name': 'Image Conversion Job',
                'verbose_name_plural': 'Image Conversion Jobs',
                'db_table': 'image_tool_conversion_jobs',
                'ordering': ['-created_at'],
            },
        ),
    ]
